package spectest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/mathetake/gasm/wasm"
)

func Test_f32_cmp(t *testing.T) {
	vm := requireInitVM(t, "f32_cmp", nil)
	assertBinaryOp := func(name string, arg1, arg2, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg1, arg2)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeI32) && assert.Equal(t, exp, values[0])) {
			panic(name + " failed")
		}
	}
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("eq", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("ne", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("lt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("le", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("gt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(1))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))
	assertBinaryOp("ge", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(uint32(int32(0))))

}
