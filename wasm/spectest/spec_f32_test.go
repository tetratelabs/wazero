package spectest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/mathetake/gasm/wasm"
)

func Test_f32(t *testing.T) {
	/*
		;; \(assert_return\s\(invoke\s("[a-z]+")\s\(f32.const\s((\.|:|-|\+|[0-9a-z])+)\)\s\(f32.const\s((\.|-|:|\+|[0-9a-z])+)\)\)\s\(f32.const\s((\.|-|:|\+|[0-9a-z])+)\)\)
		->
		assertBinaryOp($1, uint64(math.Float32bits($2)), uint64(math.Float32bits($4)), uint64(math.Float32bits($6)))

		;; \(assert_return\s\(invoke\s("[a-z]+")\s\(f32.const\s((\.|:|-|\+|[0-9a-z])+)\)\)\s\(f32.const\s((\.|:|-|\+|[0-9a-z])+)\)\)
		->
		assertUnaryOp($1,  uint64(math.Float32bits($2)), uint64(math.Float32bits($4)))
	*/

	vm := requireInitVM(t, "f32", nil)

	assertBinaryOp := func(name string, arg1, arg2, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg1, arg2)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF32)) {
			v := math.Float32frombits(uint32(values[0]))
			if (math.IsNaN(float64(v)) && !math.IsNaN(float64(math.Float32frombits(uint32(exp))))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertUnaryOp := func(name string, arg, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF32)) {
			v := math.Float32frombits(uint32(values[0]))
			if (math.IsNaN(float64(v)) && !math.IsNaN(float64(math.Float32frombits(uint32(exp))))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-148)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-148)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.000002p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffcp-127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffcp-127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.000002p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.000002p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffcp-127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffcp-127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.000002p-126)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-125)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-125)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.8p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.8p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.b21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.721fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.721fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.b21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.8p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.8p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+1)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.d21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.521fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.521fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.d21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.b21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.721fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.721fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.b21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.d21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.521fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.521fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.d21fb6p+2)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+3)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+3)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("add", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-148)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-148)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffcp-127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.000002p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.000002p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffcp-127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffcp-127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.000002p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.000002p-126)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffcp-127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-125)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-125)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.8p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.8p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.721fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.b21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.b21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.721fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.8p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.8p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+1)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.521fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.d21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.d21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.521fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.721fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.b21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.b21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.721fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.521fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.d21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.d21fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.521fb6p+2)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+3)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+3)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("sub", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.8p-147)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p-124)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.3bd3cep+5)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.3bd3cep+5)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.3bd3cep+5)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.3bd3cep+5)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep-22)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+1)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+126)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("mul", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-23)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-23)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-23)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-23)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-148)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-148)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-148)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-148)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+23)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+23)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+23)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+23)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f3p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f3p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f3p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f3p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f306p-4)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f306p-4)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f306p-4)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f306p-4)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-129)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+1)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+1)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+1)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+1)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f306p-3)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f306p-3)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f306p-3)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f306p-3)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-128)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-128)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-128)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-128)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+3)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+3)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+3)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+3)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb8p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb8p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb8p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb8p-126)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f304p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f304p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.45f304p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.45f304p+125)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("div", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("min", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("max", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.6a09e6p-75)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-63)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.6a09e6p-1)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.40d932p+1)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+63)))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("sqrt", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.cp+2)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.8p+2)))
	assertUnaryOp("floor", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertUnaryOp("floor", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("floor", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.8p+2)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.cp+2)))
	assertUnaryOp("ceil", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertUnaryOp("ceil", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("ceil", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.8p+2)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.8p+2)))
	assertUnaryOp("trunc", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertUnaryOp("trunc", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("trunc", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.8p+2)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.8p+2)))
	assertUnaryOp("nearest", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertUnaryOp("nearest", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("nearest", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
}
