package spectest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/mathetake/gasm/wasm"
)

func Test_f64(t *testing.T) {
	vm := requireInitVM(t, "f64", nil)
	assertBinaryOp := func(name string, arg1, arg2, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg1, arg2)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF64)) {
			v := math.Float64frombits(values[0])
			if (math.IsNaN(float64(v)) && !math.IsNaN(math.Float64frombits(exp))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertUnaryOp := func(name string, arg, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF64)) {
			v := math.Float64frombits(values[0])
			if (math.IsNaN(float64(v)) && !math.IsNaN(math.Float64frombits(exp))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000002p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000002p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0.fffffffffffffp-1022))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.fffffffffffffp-1022))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.fffffffffffffp-1022))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.fffffffffffffp-1022))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.0000000000001p-1022))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1021))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1021))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.8p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1.8p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.b21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.721fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.721fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.b21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.8p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1.8p+0))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+1))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+1))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.d21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.521fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.521fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.d21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.b21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(-0x1.721fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(0x1.721fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.b21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.d21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(-0x1.521fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(0x1.521fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.d21fb54442d18p+2))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+3))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+3))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("add", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000002p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000002p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0.fffffffffffffp-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x0.fffffffffffffp-1022))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.fffffffffffffp-1022))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.0000000000001p-1022))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.fffffffffffffp-1022))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1021))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1021))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(-0x1.8p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(0x1.8p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.721fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.b21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.b21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.721fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1.8p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1.8p+0))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+1))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+1))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.521fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.d21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.d21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.521fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.721fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(-0x1.b21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(0x1.b21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.721fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.521fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(-0x1.d21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(0x1.d21fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.521fb54442d18p+2))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+3))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+3))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("sub", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(-0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x0.8p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-2))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-2))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-2))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-2))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000006p-1022))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p-1020))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+1))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.3bd3cc9be45dep+5))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.3bd3cc9be45dep+5))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.3bd3cc9be45dep+5))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.3bd3cc9be45dep+5))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp-51))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1022))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("mul", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-52))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-52))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-52))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-52))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000002p-1022))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000002p-1022))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000002p-1022))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000002p-1022))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+52))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+52))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+52))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+52))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1021))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1021))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1021))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1021))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.28be60db9391p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.28be60db9391p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.28be60db9391p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.28be60db9391p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+1021))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+1021))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+1021))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+1021))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c883p-4))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c883p-4))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c883p-4))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c883p-4))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.2p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.2p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.2p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.2p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+1022))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+1022))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+1022))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+1022))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p+1))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p+1))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+1))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p+1))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c883p-3))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c883p-3))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c883p-3))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c883p-3))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.4p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.4p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.4p-1022))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.4p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+3))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+3))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+3))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+3))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d19p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d19p-1022))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d19p-1022))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d19p-1022))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c882p+1021))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c882p+1021))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.45f306dc9c882p+1021))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.45f306dc9c882p+1021))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("div", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("min", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("max", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("sqrt", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("sqrt", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-537))
	assertUnaryOp("sqrt", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-511))
	assertUnaryOp("sqrt", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x1p-1), math.Float64bits(0x1.6a09e667f3bcdp-1))
	assertUnaryOp("sqrt", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("sqrt", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.40d931ff62705p+1))
	assertUnaryOp("sqrt", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+511))
	assertUnaryOp("sqrt", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("sqrt", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("sqrt", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("floor", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("floor", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("floor", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertUnaryOp("floor", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("floor", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertUnaryOp("floor", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("floor", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertUnaryOp("floor", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertUnaryOp("floor", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertUnaryOp("floor", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("floor", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.cp+2))
	assertUnaryOp("floor", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.8p+2))
	assertUnaryOp("floor", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertUnaryOp("floor", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("floor", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertUnaryOp("floor", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("floor", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("floor", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("floor", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("floor", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("ceil", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("ceil", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("ceil", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("ceil", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertUnaryOp("ceil", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("ceil", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertUnaryOp("ceil", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertUnaryOp("ceil", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertUnaryOp("ceil", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertUnaryOp("ceil", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("ceil", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.8p+2))
	assertUnaryOp("ceil", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.cp+2))
	assertUnaryOp("ceil", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertUnaryOp("ceil", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("ceil", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertUnaryOp("ceil", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("ceil", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("ceil", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("ceil", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("ceil", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("trunc", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertUnaryOp("trunc", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertUnaryOp("trunc", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("trunc", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.8p+2))
	assertUnaryOp("trunc", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.8p+2))
	assertUnaryOp("trunc", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertUnaryOp("trunc", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("trunc", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertUnaryOp("trunc", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("trunc", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("trunc", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("trunc", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("trunc", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("nearest", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertUnaryOp("nearest", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertUnaryOp("nearest", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("nearest", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.8p+2))
	assertUnaryOp("nearest", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.8p+2))
	assertUnaryOp("nearest", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertUnaryOp("nearest", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("nearest", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertUnaryOp("nearest", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("nearest", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("nearest", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("nearest", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("nearest", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
}
