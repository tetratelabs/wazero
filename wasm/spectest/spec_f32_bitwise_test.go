package spectest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/mathetake/gasm/wasm"
)

func Test_f32_bitwise(t *testing.T) {
	vm := requireInitVM(t, "f32_bitwise", nil)
	assertBinaryOp := func(name string, arg1, arg2, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg1, arg2)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF32)) {
			v := math.Float32frombits(uint32(values[0]))
			if (math.IsNaN(float64(v)) && !math.IsNaN(float64(math.Float32frombits(uint32(exp))))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertUnaryOp := func(name string, arg, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF32)) {
			v := math.Float32frombits(uint32(values[0]))
			if (math.IsNaN(float64(v)) && !math.IsNaN(float64(math.Float32frombits(uint32(exp))))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}

	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertBinaryOp("copysign", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertUnaryOp("abs", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("abs", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("abs", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("abs", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("abs", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("abs", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x0p+0)), uint64(math.Float32bits(0x0p+0)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x0p+0)), uint64(math.Float32bits(-0x0p+0)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1p-149)), uint64(math.Float32bits(0x1p-149)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1p-149)), uint64(math.Float32bits(-0x1p-149)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1p-126)), uint64(math.Float32bits(0x1p-126)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1p-126)), uint64(math.Float32bits(-0x1p-126)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1p-1)), uint64(math.Float32bits(0x1p-1)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1p-1)), uint64(math.Float32bits(-0x1p-1)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1p+0)), uint64(math.Float32bits(0x1p+0)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1p+0)), uint64(math.Float32bits(-0x1p+0)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1.921fb6p+2)), uint64(math.Float32bits(0x1.921fb6p+2)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1.921fb6p+2)), uint64(math.Float32bits(-0x1.921fb6p+2)))
	assertUnaryOp("neg", uint64(math.Float32bits(-0x1.fffffep+127)), uint64(math.Float32bits(0x1.fffffep+127)))
	assertUnaryOp("neg", uint64(math.Float32bits(0x1.fffffep+127)), uint64(math.Float32bits(-0x1.fffffep+127)))
	assertUnaryOp("neg", uint64(math.Float32bits(float32(math.Inf(-1)))), uint64(math.Float32bits(float32(math.Inf(1)))))
	assertUnaryOp("neg", uint64(math.Float32bits(float32(math.Inf(1)))), uint64(math.Float32bits(float32(math.Inf(-1)))))
	assertUnaryOp("neg", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
	assertUnaryOp("neg", uint64(math.Float32bits(float32(math.NaN()))), uint64(math.Float32bits(float32(math.NaN()))))
}
