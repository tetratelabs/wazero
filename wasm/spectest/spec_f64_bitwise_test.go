package spectest

import (
	"math"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/mathetake/gasm/wasm"
)

func Test_f64_bitwise(t *testing.T) {
	vm := requireInitVM(t, "f64_bitwise", nil)
	assertBinaryOp := func(name string, arg1, arg2, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg1, arg2)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF64)) {
			v := math.Float64frombits(values[0])
			if (math.IsNaN(float64(v)) && !math.IsNaN(math.Float64frombits(exp))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}
	assertUnaryOp := func(name string, arg, exp uint64) {
		values, types, err := vm.ExecExportedFunction(name, arg)
		if !(assert.NoError(t, err) &&
			assert.Len(t, values, 1) &&
			assert.Len(t, types, 1) &&
			assert.Equal(t, types[0], wasm.ValueTypeF64)) {
			v := math.Float64frombits(values[0])
			if (math.IsNaN(float64(v)) && !math.IsNaN(math.Float64frombits(exp))) ||
				(!assert.Equal(t, exp, v)) {
				panic(name + " failed")
			}
		}
	}

	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x1p-1), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x1p+0), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(0x0p+0), math.Float64bits(math.NaN()), math.Float64bits(0x0p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x0p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x1p+0), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(0x1p-1), math.Float64bits(math.NaN()), math.Float64bits(0x1p-1))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x0p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x0p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1022), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x1p-1), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x1p-1), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(0x1p+0), math.Float64bits(math.NaN()), math.Float64bits(0x1p+0))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1022), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p-1), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1p+0), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1022), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1022), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p-1), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p-1), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1p+0), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1p+0), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x0p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1022), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1022), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p-1), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p-1), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1p+0), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x1p+0), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)))
	assertBinaryOp("copysign", math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x0p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1022), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p-1), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1p+0), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(-1)), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.Inf(1)), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertBinaryOp("copysign", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("abs", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("abs", math.Float64bits(0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("abs", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertUnaryOp("abs", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertUnaryOp("abs", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertUnaryOp("abs", math.Float64bits(0x1p-1022), math.Float64bits(0x1p-1022))
	assertUnaryOp("abs", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertUnaryOp("abs", math.Float64bits(0x1p-1), math.Float64bits(0x1p-1))
	assertUnaryOp("abs", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("abs", math.Float64bits(0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("abs", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertUnaryOp("abs", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertUnaryOp("abs", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("abs", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("abs", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("abs", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("abs", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("abs", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("neg", math.Float64bits(-0x0p+0), math.Float64bits(0x0p+0))
	assertUnaryOp("neg", math.Float64bits(0x0p+0), math.Float64bits(-0x0p+0))
	assertUnaryOp("neg", math.Float64bits(-0x0.0000000000001p-1022), math.Float64bits(0x0.0000000000001p-1022))
	assertUnaryOp("neg", math.Float64bits(0x0.0000000000001p-1022), math.Float64bits(-0x0.0000000000001p-1022))
	assertUnaryOp("neg", math.Float64bits(-0x1p-1022), math.Float64bits(0x1p-1022))
	assertUnaryOp("neg", math.Float64bits(0x1p-1022), math.Float64bits(-0x1p-1022))
	assertUnaryOp("neg", math.Float64bits(-0x1p-1), math.Float64bits(0x1p-1))
	assertUnaryOp("neg", math.Float64bits(0x1p-1), math.Float64bits(-0x1p-1))
	assertUnaryOp("neg", math.Float64bits(-0x1p+0), math.Float64bits(0x1p+0))
	assertUnaryOp("neg", math.Float64bits(0x1p+0), math.Float64bits(-0x1p+0))
	assertUnaryOp("neg", math.Float64bits(-0x1.921fb54442d18p+2), math.Float64bits(0x1.921fb54442d18p+2))
	assertUnaryOp("neg", math.Float64bits(0x1.921fb54442d18p+2), math.Float64bits(-0x1.921fb54442d18p+2))
	assertUnaryOp("neg", math.Float64bits(-0x1.fffffffffffffp+1023), math.Float64bits(0x1.fffffffffffffp+1023))
	assertUnaryOp("neg", math.Float64bits(0x1.fffffffffffffp+1023), math.Float64bits(-0x1.fffffffffffffp+1023))
	assertUnaryOp("neg", math.Float64bits(math.Inf(-1)), math.Float64bits(math.Inf(1)))
	assertUnaryOp("neg", math.Float64bits(math.Inf(1)), math.Float64bits(math.Inf(-1)))
	assertUnaryOp("neg", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
	assertUnaryOp("neg", math.Float64bits(math.NaN()), math.Float64bits(math.NaN()))
}
