{"source_filename": "./simd_store.wast",
 "commands": [
  {"type": "module", "line": 3, "filename": "simd_store.0.wasm"}, 
  {"type": "assert_return", "line": 40, "action": {"type": "invoke", "field": "v128.store_i8x16", "args": []}, "expected": [{"type": "v128", "lane_type": "i8", "value": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"]}]}, 
  {"type": "assert_return", "line": 41, "action": {"type": "invoke", "field": "v128.store_i16x8", "args": []}, "expected": [{"type": "v128", "lane_type": "i16", "value": ["0", "1", "2", "3", "4", "5", "6", "7"]}]}, 
  {"type": "assert_return", "line": 42, "action": {"type": "invoke", "field": "v128.store_i16x8_2", "args": []}, "expected": [{"type": "v128", "lane_type": "i16", "value": ["12345", "12345", "12345", "12345", "12345", "12345", "12345", "12345"]}]}, 
  {"type": "assert_return", "line": 43, "action": {"type": "invoke", "field": "v128.store_i16x8_3", "args": []}, "expected": [{"type": "v128", "lane_type": "i16", "value": ["4660", "4660", "4660", "4660", "4660", "4660", "4660", "4660"]}]}, 
  {"type": "assert_return", "line": 44, "action": {"type": "invoke", "field": "v128.store_i32x4", "args": []}, "expected": [{"type": "v128", "lane_type": "i32", "value": ["0", "1", "2", "3"]}]}, 
  {"type": "assert_return", "line": 45, "action": {"type": "invoke", "field": "v128.store_i32x4_2", "args": []}, "expected": [{"type": "v128", "lane_type": "i32", "value": ["123456789", "123456789", "123456789", "123456789"]}]}, 
  {"type": "assert_return", "line": 46, "action": {"type": "invoke", "field": "v128.store_i32x4_3", "args": []}, "expected": [{"type": "v128", "lane_type": "i32", "value": ["305419896", "305419896", "305419896", "305419896"]}]}, 
  {"type": "assert_return", "line": 47, "action": {"type": "invoke", "field": "v128.store_f32x4", "args": []}, "expected": [{"type": "v128", "lane_type": "f32", "value": ["0", "1065353216", "1073741824", "1077936128"]}]}, 
  {"type": "module", "line": 52, "filename": "simd_store.1.wasm"}, 
  {"type": "assert_return", "line": 89, "action": {"type": "invoke", "field": "as-block-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 90, "action": {"type": "invoke", "field": "as-loop-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 91, "action": {"type": "invoke", "field": "as-br-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 92, "action": {"type": "invoke", "field": "as-br_if-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 93, "action": {"type": "invoke", "field": "as-br_if-value-cond", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 94, "action": {"type": "invoke", "field": "as-br_table-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 95, "action": {"type": "invoke", "field": "as-return-value", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 96, "action": {"type": "invoke", "field": "as-if-then", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 97, "action": {"type": "invoke", "field": "as-if-else", "args": []}, "expected": []}, 
  {"type": "assert_malformed", "line": 103, "filename": "simd_store.2.wat", "text": "unknown operator", "module_type": "text"}, 
  {"type": "assert_malformed", "line": 110, "filename": "simd_store.3.wat", "text": "unknown operator", "module_type": "text"}, 
  {"type": "assert_malformed", "line": 117, "filename": "simd_store.4.wat", "text": "unknown operator", "module_type": "text"}, 
  {"type": "assert_invalid", "line": 128, "filename": "simd_store.5.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 132, "filename": "simd_store.6.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 136, "filename": "simd_store.7.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 144, "filename": "simd_store.8.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 152, "filename": "simd_store.9.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 160, "filename": "simd_store.10.wasm", "text": "type mismatch", "module_type": "binary"}]}
